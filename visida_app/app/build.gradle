apply plugin: 'com.android.application'

def vId = "\"14.0\"" // Use this to display the Id on the settings screen,
def vCode = 14 // Increment this to prevent users from downgrading
//def vName = "master"
//def vName = "Khmer"
def vName = "Swahili"
android {
    // Fix release build failing on lint errors
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    signingConfigs {
    }
    defaultConfig {
        applicationId "au.edu.newcastle.jnc985.visida"
        minSdkVersion 24
        // We can't build for higher SDKs due to using the support packages which have
        // now been replaced with Androidx
        targetSdkVersion 30
        versionCode vCode
        versionName vName
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        setProperty("archivesBaseName", "VISIDA-$versionName")
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$rootDir/schemas".toString()]
            }
        }
        // https://stackoverflow.com/questions/22655257/how-to-easily-remove-unnecessary-localization-resources-from-added-libraries-in
        resConfigs "sw-rTZ" // Only include Swahili resources
    }
    buildTypes {
        /*
        android.applicationVariants.all { v ->
            if (v.buildType.name == "release") {
                v.assemble.doLast {
                    logger.lifecycle("we have successfully built $v.name and can post a messaage to remote server")
                    File apk = v.outputs*.outputFile.get(0)
                    //upload(apk)
                }
            }
        }*/
        debug {
            buildConfigField "boolean", "releasebuild", "false"
            buildConfigField "boolean", "forceKhmer", vName.contains("Khmer") ? "true" : "false"
            buildConfigField "boolean", "forceSwahili", vName.contains("Swahili") ? "true" : "false"
            // Expiry date of the app
            buildConfigField "int", "expiryYear", "2021"
            buildConfigField "int", "expiryMonth", "9"
            buildConfigField "int", "expiryDay", "30"
            // Version Id
            buildConfigField "String", "versionId", vId
        }
        release {
            buildConfigField "boolean", "releasebuild", "true"
            buildConfigField "boolean", "forceKhmer", vName.contains("Khmer") ? "true" : "false"
            buildConfigField "boolean", "forceSwahili", vName.contains("Swahili") ? "true" : "false"
            // Expiry date of the app
            buildConfigField "int", "expiryYear", "2021"
            buildConfigField "int", "expiryMonth", "9"
            buildConfigField "int", "expiryDay", "30"
            // Version Id
            buildConfigField "String", "versionId", vId
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$rootDir/schemas".toString())
    }
    testBuildType "release"
    //testBuildType "debug"
    testOptions {
        unitTests.returnDefaultValues = true
    }
    buildFeatures {
        dataBinding = true
    }
    compileSdkVersion 30
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.3.0'
    //ViewModel dependencies
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.room:room-runtime:2.2.6'
    annotationProcessor 'androidx.room:room-compiler:2.2.6'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'

    //Testing
    //Local Unit Tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.13.0'

    //Instrumentation Tests
    androidTestImplementation 'androidx.room:room-testing:2.2.6'
    androidTestImplementation 'org.mockito:mockito-android:2.13.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}
